@use "../../modules/units.module";
@use "../../modules/funcs.module";

.button {
  padding: 0 units.$default-padding;
  display: flex;
  gap: funcs.px-rem(16);
  align-items: center;
  justify-content: center;

  background: none;
  outline: none;
  border: none;

  font-weight: 600;
  font-size: funcs.px-rem(12);
  line-height: 130%;
  color: var(--text-primary);
  white-space: nowrap;

  border-radius: units.$round-xl;

  transition: 0.16s ease-out;

  user-select: none;

  box-shadow: funcs.px-rem(5) funcs.px-rem(8) funcs.px-rem(20) var(--shadow);

  cursor: pointer;

  & > * {
    transition: 0.16s ease-out;
  }

  &:not(:disabled):hover {
    scale: 1.05;
  }
  &:not(:disabled):active {
    scale: 0.8;
  }

  &:disabled {
    filter: grayscale(0);
    box-shadow: none !important;
    cursor: default;

    &:hover {
      box-shadow: none !important;
    }
  }
}

.icon_button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  outline: none;

  color: var(--text-primary);

  border-radius: 50%;
  cursor: pointer;

  & > * {
    transition: 0.16s ease-out;
  }

  transition: 0.16s ease-out;

  &:hover {
    scale: 1.05;
  }
  &:active {
    scale: 0.8;
  }
}

.shadow {
  box-shadow: funcs.px-rem(5) funcs.px-rem(8) funcs.px-rem(20)
    rgba(0, 0, 0, 0.2);
}

.shadow_on_hover {
  &:hover {
    box-shadow: funcs.px-rem(5) funcs.px-rem(8) funcs.px-rem(20)
      rgba(0, 0, 0, 0.2);
  }
}

.icon_button.md {
  width: units.$md;
  height: units.$md;
  flex-shrink: 0;

  & > * {
    width: calc(units.$md / 2);
    height: calc(units.$md / 2);
    object-fit: contain;
  }
}

.button.md {
  height: units.$md;
}

.icon_button.sm {
  width: units.$sm;
  height: units.$sm;
  flex-shrink: 0;

  & > * {
    width: calc(units.$sm / 2);
    height: calc(units.$sm / 2);
    object-fit: contain;
  }
}

.button.sm {
  height: units.$sm;
}

.icon_button.lg {
  width: units.$lg;
  height: units.$lg;
  flex-shrink: 0;

  & > * {
    width: calc(units.$lg / 2);
    height: calc(units.$lg / 2);
    object-fit: contain;
  }
}

.button.lg {
  padding: 0 funcs.px-rem(40);
  height: units.$lg;

  font-size: funcs.px-rem(14);
}

.contained {
  color: #fff;
}

.outlined {
  background: none;
}

.bg_primary {
  background: var(--primary);

  &:disabled {
    background: var(--primary-disabled);
  }
}

.bg_warning {
  background: var(--warning);
}
.bg_danger {
  background: var(--danger);
}
.bg_success {
  background: var(--success);
}
.bg_default {
  background: var(--surface);
  color: var(--text-primary);
}
.bg_vanish {
  background: none;
  color: var(--text-primary);
}

.outlined {
  margin: funcs.px-rem(1);
}

.border_primary {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--primary);
  color: var(--primary);
}

.border_warning {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--warning);
  color: var(--warning);
}
.border_danger {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--danger);
  color: var(--danger);
}
.border_success {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--success);
  color: var(--success);
}
.border_default {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--stroke);
  color: var(--stroke);
}

.primary_on_hover {
  &:not(:disabled):hover {
    background: var(--primary);
    color: var(--text-contrast);
  }
}
.danger_on_hover {
  &:not(:disabled):hover {
    background: var(--danger);
    color: var(--text-contrast);
  }
}
.default_on_hover {
  &:not(:disabled):hover {
    background: var(--primary);
    color: var(--text-contrast);
  }
}
.warning_on_hover {
  &:not(:disabled):hover {
    background: var(--warning);
    color: var(--text-contrast);
  }
}
.success_on_hover {
  &:not(:disabled):hover {
    background: var(--success);
    color: var(--text-contrast);
  }
}

.inner_primary_on_hover {
  &:hover {
    color: var(--primary);

    & > * {
      color: var(--primary);
    }
  }
}
.inner_danger_on_hover {
  &:hover {
    color: var(--danger);
    & > * {
      color: var(--danger);
    }
  }
}
.inner_default_on_hover {
  &:hover {
    color: var(--surface);

    & > * {
      color: var(--surface);
    }
  }
}
.inner_warning_on_hover {
  &:hover {
    color: var(--warning);

    & > * {
      color: var(--warning);
    }
  }
}
.inner_success_on_hover {
  &:hover {
    color: var(--success);

    & > * {
      color: var(--success);
    }
  }
}

.fullWidth {
  width: 100%;
}
