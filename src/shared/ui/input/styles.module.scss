@use "../../modules/funcs.module";
@use "../../modules/units.module";

.input_wrapper {
  position: relative;
  width: fit-content;

  &:has(.icon_wrapper) {
    .input {
      padding-left: calc(
        units.$default-padding + funcs.px-rem(16) + units.$default-padding / 2
      );
      padding-right: calc(units.$default-padding / 2);
    }
  }
}

.input {
  padding: 0 units.$default-padding;

  width: 100%;
  outline: none;
  border-radius: units.$round-xl;

  background: none;

  line-height: 1.3;

  transition: 0.16s ease-out;

  border: none;

  color: var(--text-primary);

  caret-color: var(--text-primary);

  &::placeholder {
    color: var(--text-secondary);
  }
}

.input_wrapper {
  &:has(.md) {
    .icon_wrapper {
      width: calc(units.$md / 2.5);
      height: calc(units.$md / 2.5);
    }
  }
}

.sm {
  padding: 0 calc(units.$default-padding / 1.5) !important;
  height: units.$sm;
}

.md {
  height: units.$md;
}

.text_start {
  text-align: start;
}

.text_center {
  text-align: center;
}

.icon_wrapper {
  z-index: -1;
  position: absolute;
  width: funcs.px-rem(16);
  height: funcs.px-rem(16);

  top: 50%;
  transform: translateY(-50%);

  & > * {
    width: 100%;
    height: 100%;
    object-fit: contain;
    color: var(--text-secondary);
  }
}

.icon_start {
  left: calc(units.$default-padding);
}

.icon_end {
  right: calc(units.$default-padding);
}

.outlined {
  box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--stroke);

  &:focus,
  &:hover {
    box-shadow: 0 0 funcs.px-rem(1) funcs.px-rem(1) var(--base);
  }
}

.fullWidth {
  width: 100%;
}
